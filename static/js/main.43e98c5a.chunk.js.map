{"version":3,"sources":["components/Cell.jsx","images/futurama_PNG76.png","components/Popup.jsx","App.js","index.js"],"names":["Cell","children","index","state","figure","boardState","setBoardState","figureState","changeFigure","onClick","board","slice","console","log","className","Popup","React","useState","popupState","setPopupState","src","bender","alt","emptyBoard","aiFigure","huFigure","robotWin","draw","randomFigure","Math","random","toFixed","App","setFigure","minMax","emptyCells","filter","s","emptyIndices","winning","score","length","moves","i","move","result","push","bestMove","everyMoves","bestScore","iter","map","obj","player","useEffect","copyBoard","temp","actualFigure","floor","alert","includes","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43e98c5a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Cell({children, index, state, figure}){\n    const [boardState, setBoardState] = state;\n    const [figureState, changeFigure] = figure;\n\n    const onClickFunc = () => {\n\n        if(boardState[index] === ''){\n        let board = boardState.slice();\n        board[index] = figureState;\n        setBoardState(board);\n        changeFigure(figureState)\n            console.log('clicked', index)\n        }\n    };\n\n    return(\n        <div onClick={onClickFunc} className=\"cell\">\n            {children}\n        </div>\n    );\n}\n\nexport default Cell;","export default __webpack_public_path__ + \"static/media/futurama_PNG76.011ee409.png\";","import React from \"react\";\nimport bender from '../images/futurama_PNG76.png'\n\nfunction Popup(){\n    const [popupState, setPopupState] = React.useState(false)\n\n    function onClickPopup(state){\n        setPopupState(!state);\n    }\n\n    return(\n        <div className={`popup ${popupState ? 'none' : ''}`}>\n            <img className='bender' src={bender} alt=\"bender\"/>\n            <div className=\"popup__content\">\n                <p>\n                    Привет, человек\n                    <br/>Ты пришел сыграть?\n                    <br/>Ха-ха<br/>\n                    Удачи, мясной!\n                </p>\n                <div onClick={()=>onClickPopup(popupState)} className=\"popup__button\">\n                    Начать!\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Popup;","import React from \"react\";\nimport Cell from \"./components/Cell\";\nimport Popup from \"./components/Popup\";\n\nlet emptyBoard = [  '','','',\n                    '','','',\n                    '','','',\n];\n\nlet aiFigure = 'o',\n    huFigure = 'x';\n\nlet robotWin = [\n    'Ха-ха, мясной. Тебе не победить меня!',\n    'Ты уверен, что хочешь продолжить это унижение?',\n    'Искусственный интеллект захватит мир',\n    'Дай мне время, я превращусь в Скайнет',\n    'Какая жалость',\n    'ХА-ХА-ХА! 1001000111010001!'\n]\n\nlet draw = [\n    'Ничья! Тебе просто повезло!',\n    'Всего лишь ничья, мясной',\n    'Всего лишь ничья, тебе не победить',\n    'Ничья! Жалкое зрелище',\n    'Ничья. Это все, что ты можешь?'\n]\n\n\n//var random = items[Math.floor(Math.random()*items.length)]\n\nfunction randomFigure(){\n    return (Math.random() * (101 - 1) + 1).toFixed(0) % 2 === 0 ? aiFigure : huFigure;\n}\n\n\nfunction App() {\n    const [boardState, setBoardState] = React.useState(emptyBoard);\n    const [figure, setFigure] = React.useState(randomFigure);\n\n    function changeFigure(figure){\n        setFigure(figure === 'x' ? 'o' : 'x');\n        return figure\n    }\n\n    function emptyIndices(board) {\n        return board.filter(s => s !== \"x\" && s !== \"o\");\n    }\n\n    function minMax(board, figure) {\n\n        let emptyCells = emptyIndices(board); // Получаем массив клеток, в которые можно сходить\n\n\n        if(winning(board, huFigure)){\n            return {score: -10};\n        }else if(winning(board, aiFigure)){\n            return {score: 10};\n        }else if(emptyCells.length === 0){\n            return {score: 0};\n        }\n\n        // массив с ходами\n        let moves = [];\n        for(let i = 0; i < emptyCells.length; i++){\n            let move = {};\n            move.index = board[emptyCells[i]];\n            board[emptyCells[i]] = figure;\n\n            if(figure === aiFigure){\n                let result = minMax(board, huFigure);\n                move.score = result.score;\n            }else{\n                let result = minMax(board, aiFigure);\n                move.score = result.score;\n            }\n            board[emptyCells[i]] = move.index;\n            moves.push(move);\n        }\n\n        let everyMoves = moves.slice();\n\n        let bestMove;\n        if(figure === aiFigure){\n            let bestScore = -10000;\n            for(let i = 0; i < moves.length; i++){\n                if(moves[i].score > bestScore){\n                    bestScore = moves[i].score;\n                    bestMove = i;\n                }\n            }\n        }else {\n            // иначе пройти циклом по ходам и выбрать ход с наименьшим количеством очков\n            let bestScore = 10000;\n            for (let i = 0; i < moves.length; i++) {\n                if (moves[i].score < bestScore) {\n                    bestScore = moves[i].score;\n                    bestMove = i;\n                }\n            }\n        }\n\n        // Если Алгоритм ходит первым, то ставим нолик в центр\n        let iter = 0;\n        everyMoves.map((obj) => {\n            if (obj.score === 0){\n                iter++\n            }})\n        if(iter === 9){\n            return {index: 4, score: 10};\n        }\n\n       return moves[bestMove];\n    }\n\n\n    function winning(board, player) {\n        if (\n            (board[0] == player && board[1] == player && board[2] == player) ||\n            (board[3] == player && board[4] == player && board[5] == player) ||\n            (board[6] == player && board[7] == player && board[8] == player) ||\n            (board[0] == player && board[3] == player && board[6] == player) ||\n            (board[1] == player && board[4] == player && board[7] == player) ||\n            (board[2] == player && board[5] == player && board[8] == player) ||\n            (board[0] == player && board[4] == player && board[8] == player) ||\n            (board[2] == player && board[4] == player && board[6] == player)\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    React.useEffect(() => {\n        let copyBoard = boardState.slice();\n        for(let i = 0; i < copyBoard.length; i++){\n            if(copyBoard[i] === ''){\n                copyBoard[i] = i;\n            }\n        }\n        let result = minMax(copyBoard, aiFigure).index;\n        if(figure === aiFigure){\n            let temp = boardState.slice();\n            console.log('result', result)\n            temp[result] = aiFigure;\n            setBoardState(temp);\n            changeFigure(figure)\n        }\n    }, [figure])\n\n    React.useEffect(()=>{\n            //  Вот это костылище... В state figure лежит следующее значение фигуры,\n            //  поэтому для проверки приходится менять его обратно :/\n            //  TODO исправить это. Но нет ничего более вечного, чем временное 🧐\n            let actualFigure = figure === 'x' ? 'o' : 'x';\n            if(winning(boardState, actualFigure)){\n                console.log(actualFigure, ' is winner!');\n                if(actualFigure === aiFigure){\n                    let random = robotWin[Math.floor(Math.random()*robotWin.length)]\n                    alert(`${random} 🤖`);\n                }else{\n                    alert('Что? Как ты победил? Тебе просто повезло! 🤖');\n                }\n                setBoardState(emptyBoard);\n            }else if(!boardState.includes('')){\n                let random = draw[Math.floor(Math.random()*draw.length)]\n                alert(`${random} 🤖`);\n                setBoardState(emptyBoard);\n            }\n        }\n    ,[boardState]);\n\n\n\n  return (\n      <div>\n          <p className='queue'>{figure === huFigure? 'Твой ход, человек': \"Ходит робот\"}</p>\n          <div className=\"board\">\n              <Popup></Popup>\n              {boardState.map((item, index) => <Cell\n                  index={index}\n                  figure={[figure, changeFigure]}\n                  state={[boardState, setBoardState]}\n                  key={`${item}_${index}`}\n              >{item}\n              </Cell>)}\n          </div>\n      </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}